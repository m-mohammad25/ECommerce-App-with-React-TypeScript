import{r as n,j as r,c as f,u,H as S,I as B}from"./index-BWZp9pjs.js";import{P as F}from"./Heading-C02lxtKi.js";function W(e,s){return n.Children.toArray(e).some(o=>n.isValidElement(o)&&o.type===s)}function X({as:e,bsPrefix:s,className:o,...a}){s=u(s,"col");const t=S(),l=B(),c=[],d=[];return t.forEach(m=>{const i=a[m];delete a[m];let p,$,h;typeof i=="object"&&i!=null?{span:p,offset:$,order:h}=i:p=i;const y=m!==l?`-${m}`:"";p&&c.push(p===!0?`${s}${y}`:`${s}${y}-${p}`),h!=null&&d.push(`order${y}-${h}`),$!=null&&d.push(`offset${y}-${$}`)}),[{...a,className:f(o,...c,...d)},{as:e,bsPrefix:s,spans:c}]}const E=n.forwardRef((e,s)=>{const[{className:o,...a},{as:t="div",bsPrefix:l,spans:c}]=X(e);return r.jsx(t,{...a,ref:s,className:f(o,!c.length&&l)})});E.displayName="Col";const Y={type:F.string,tooltip:F.bool,as:F.elementType},w=n.forwardRef(({as:e="div",className:s,type:o="valid",tooltip:a=!1,...t},l)=>r.jsx(e,{...t,ref:l,className:f(s,`${o}-${a?"tooltip":"feedback"}`)}));w.displayName="Feedback";w.propTypes=Y;const N=n.createContext({}),g=n.forwardRef(({id:e,bsPrefix:s,className:o,type:a="checkbox",isValid:t=!1,isInvalid:l=!1,as:c="input",...d},m)=>{const{controlId:i}=n.useContext(N);return s=u(s,"form-check-input"),r.jsx(c,{...d,ref:m,type:a,id:e||i,className:f(o,s,t&&"is-valid",l&&"is-invalid")})});g.displayName="FormCheckInput";const j=n.forwardRef(({bsPrefix:e,className:s,htmlFor:o,...a},t)=>{const{controlId:l}=n.useContext(N);return e=u(e,"form-check-label"),r.jsx("label",{...a,ref:t,htmlFor:o||l,className:f(s,e)})});j.displayName="FormCheckLabel";const O=n.forwardRef(({id:e,bsPrefix:s,bsSwitchPrefix:o,inline:a=!1,reverse:t=!1,disabled:l=!1,isValid:c=!1,isInvalid:d=!1,feedbackTooltip:m=!1,feedback:i,feedbackType:p,className:$,style:h,title:y="",type:R="checkbox",label:x,children:v,as:D="input",...J},K)=>{s=u(s,"form-check"),o=u(o,"form-switch");const{controlId:L}=n.useContext(N),Q=n.useMemo(()=>({controlId:e||L}),[L,e]),T=!v&&x!=null&&x!==!1||W(v,j),U=r.jsx(g,{...J,type:R==="switch"?"checkbox":R,ref:K,isValid:c,isInvalid:d,disabled:l,as:D});return r.jsx(N.Provider,{value:Q,children:r.jsx("div",{style:h,className:f($,T&&s,a&&`${s}-inline`,t&&`${s}-reverse`,R==="switch"&&o),children:v||r.jsxs(r.Fragment,{children:[U,T&&r.jsx(j,{title:y,children:x}),i&&r.jsx(w,{type:p,tooltip:m,children:i})]})})})});O.displayName="FormCheck";const C=Object.assign(O,{Input:g,Label:j}),V=n.forwardRef(({bsPrefix:e,type:s,size:o,htmlSize:a,id:t,className:l,isValid:c=!1,isInvalid:d=!1,plaintext:m,readOnly:i,as:p="input",...$},h)=>{const{controlId:y}=n.useContext(N);return e=u(e,"form-control"),r.jsx(p,{...$,type:s,size:a,ref:h,readOnly:i,id:t||y,className:f(l,m?`${e}-plaintext`:e,o&&`${e}-${o}`,s==="color"&&`${e}-color`,c&&"is-valid",d&&"is-invalid")})});V.displayName="FormControl";const Z=Object.assign(V,{Feedback:w}),G=n.forwardRef(({className:e,bsPrefix:s,as:o="div",...a},t)=>(s=u(s,"form-floating"),r.jsx(o,{ref:t,className:f(e,s),...a})));G.displayName="FormFloating";const k=n.forwardRef(({controlId:e,as:s="div",...o},a)=>{const t=n.useMemo(()=>({controlId:e}),[e]);return r.jsx(N.Provider,{value:t,children:r.jsx(s,{...o,ref:a})})});k.displayName="FormGroup";const M=n.forwardRef(({as:e="label",bsPrefix:s,column:o=!1,visuallyHidden:a=!1,className:t,htmlFor:l,...c},d)=>{const{controlId:m}=n.useContext(N);s=u(s,"form-label");let i="col-form-label";typeof o=="string"&&(i=`${i} ${i}-${o}`);const p=f(t,s,a&&"visually-hidden",o&&i);return l=l||m,o?r.jsx(E,{ref:d,as:"label",className:p,htmlFor:l,...c}):r.jsx(e,{ref:d,className:p,htmlFor:l,...c})});M.displayName="FormLabel";const A=n.forwardRef(({bsPrefix:e,className:s,id:o,...a},t)=>{const{controlId:l}=n.useContext(N);return e=u(e,"form-range"),r.jsx("input",{...a,type:"range",ref:t,className:f(s,e),id:o||l})});A.displayName="FormRange";const H=n.forwardRef(({bsPrefix:e,size:s,htmlSize:o,className:a,isValid:t=!1,isInvalid:l=!1,id:c,...d},m)=>{const{controlId:i}=n.useContext(N);return e=u(e,"form-select"),r.jsx("select",{...d,size:o,ref:m,className:f(a,e,s&&`${e}-${s}`,t&&"is-valid",l&&"is-invalid"),id:c||i})});H.displayName="FormSelect";const _=n.forwardRef(({bsPrefix:e,className:s,as:o="small",muted:a,...t},l)=>(e=u(e,"form-text"),r.jsx(o,{...t,ref:l,className:f(s,e,a&&"text-muted")})));_.displayName="FormText";const q=n.forwardRef((e,s)=>r.jsx(C,{...e,ref:s,type:"switch"}));q.displayName="Switch";const b=Object.assign(q,{Input:C.Input,Label:C.Label}),z=n.forwardRef(({bsPrefix:e,className:s,children:o,controlId:a,label:t,...l},c)=>(e=u(e,"form-floating"),r.jsxs(k,{ref:c,className:f(s,e),controlId:a,...l,children:[o,r.jsx("label",{htmlFor:a,children:t})]})));z.displayName="FloatingLabel";const P={_ref:F.any,validated:F.bool,as:F.elementType},I=n.forwardRef(({className:e,validated:s,as:o="form",...a},t)=>r.jsx(o,{...a,ref:t,className:f(e,s&&"was-validated")}));I.displayName="Form";I.propTypes=P;const te=Object.assign(I,{Group:k,Control:Z,Floating:G,Check:C,Switch:b,Label:M,Text:_,Range:A,Select:H,FloatingLabel:z}),ee=n.forwardRef(({bsPrefix:e,className:s,as:o="div",...a},t)=>{const l=u(e,"row"),c=S(),d=B(),m=`${l}-cols`,i=[];return c.forEach(p=>{const $=a[p];delete a[p];let h;$!=null&&typeof $=="object"?{cols:h}=$:h=$;const y=p!==d?`-${p}`:"";h!=null&&i.push(`${m}${y}-${h}`)}),r.jsx(o,{ref:t,...a,className:f(s,l,...i)})});ee.displayName="Row";const se=n.forwardRef(({bsPrefix:e,variant:s,animation:o="border",size:a,as:t="div",className:l,...c},d)=>{e=u(e,"spinner");const m=`${e}-${o}`;return r.jsx(t,{ref:d,...c,className:f(l,m,a&&`${m}-${a}`,s&&`text-${s}`)})});se.displayName="Spinner";export{E as C,te as F,ee as R,se as S};
